<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.J.OrderTextBook.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="team.J.OrderTextBook.pojo.Book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bookname" property="bookname" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="press" property="press" jdbcType="VARCHAR" />
    <result column="pressdate" property="pressdate" jdbcType="VARCHAR" />
    <result column="inputname" property="inputname" jdbcType="VARCHAR" />
    <result column="inputdate" property="inputdate" jdbcType="VARCHAR" />
    <result column="imgpath" property="imgpath" jdbcType="VARCHAR" />
    <result column="visit" property="visit" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="team.J.OrderTextBook.pojo.Book" >
    insert into book (id, bookname, number, 
      author, price, press, 
      pressdate, inputname, inputdate, 
      imgpath, visit, content
      )
    values (#{id,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, 
      #{author,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{press,jdbcType=VARCHAR}, 
      #{pressdate,jdbcType=VARCHAR}, #{inputname,jdbcType=VARCHAR}, #{inputdate,jdbcType=VARCHAR}, 
      #{imgpath,jdbcType=VARCHAR}, #{visit,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="team.J.OrderTextBook.pojo.Book" >
    update book
    set bookname = #{bookname,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      press = #{press,jdbcType=VARCHAR},
      pressdate = #{pressdate,jdbcType=VARCHAR},
      inputname = #{inputname,jdbcType=VARCHAR},
      inputdate = #{inputdate,jdbcType=VARCHAR},
      imgpath = #{imgpath,jdbcType=VARCHAR},
      visit = #{visit,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, bookname, number, author, price, press, pressdate, inputname, inputdate, 
    imgpath, visit, content
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, bookname, number, author, price, press, pressdate, inputname, inputdate, 
    imgpath, visit, content
    from book
  </select>
  <select id="search" parameterType="string" resultMap="BaseResultMap">
    SELECT id, bookname, number, author, price, press, pressdate, inputname, inputdate,
    imgpath, visit, content
    FROM book
    WHERE bookname like #{s1}
    or author like #{s2}
    or press like #{s3}
  </select>
  <select id="selectByPage" resultMap="BaseResultMap">
    select id, bookname, number, author, price, press, pressdate, inputname, inputdate,
    imgpath, visit, content
    from book limit #{page} , #{count}
  </select>
  <update id="updateNumber" parameterType="integer" >
    update book
    set number = number + 200
    where id = #{value }
  </update>
</mapper>